openapi: 3.0.1
info:
  title: Swagger Solar Network
  description: 'This is a sample server Solar Network server.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io) or on [irc.freenode.net, #swagger](https://swagger.io/irc/).  For
    this sample, you can use the api key `special-key` to test the authorization filters.'
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@snetwork.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
servers:
- url: http://petstore.swagger.io/v2

security:
  - bearerAuth: [] 
  
tags:
- name: Follower
  description: Everything about your Follower
  externalDocs:
    description: Find out more
    url: https://swagger.io
- name: Story
  description: Everything about your story
- name: Post
  description: Operations about post
  externalDocs:
    description: Find out more about our post
    url: https://swagger.io
paths:
  /me/followers:
    get:
      tags: 
        - Follower
      summary: Get Follower list
      operationId: getFollowers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Follower'
        500:
          description: generic exception
          content: {}
  /me/stories:
    get: 
      tags: 
        - Story
      summary: Get Story list
      operationId: getStories
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Story'
        500:
          description: generic exception
          content: {}
    post:
      tags: 
        - Story
      summary: Create Story 
      operationId: createStory
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryDetails'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryDetails'
        404: 
          description: Story not found
          content: {}
        500:
          description: generic exception
          content: {}
  /me/stories/{id}:
    get:
      tags: 
        - Story
      summary: Get Story Details
      operationId: getStoryDetails
      parameters:
      - name: id
        in: path
        description: 'The story that needs to be fetched.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryDetails'
        404: 
          description: Story not found
          content: {}
        500:
          description: generic exception
          content: {}
    put:
      tags: 
        - Story
      summary: Update Story 
      operationId: updateStory
      parameters:
      - name: id
        in: path
        description: 'The story that needs to be updated.'
        required: true
        schema:
          type: string
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryDetails'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryDetails'
        404: 
          description: Story not found
          content: {}
        500:
          description: generic exception
          content: {}
    delete:
      tags: 
        - Story
      summary: Delete Story 
      operationId: deleteStory
      parameters:
      - name: id
        in: path
        description: 'The story that needs to be deleted.'
        required: true
        schema:
          type: string
      responses:
        204:
          description: successful operation
        404: 
          description: Story not found
          content: {}
        500:
          description: generic exception
          content: {}  
    
components:
  securitySchemes:
    basicAuth:     
      type: http
      scheme: basic
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT
      # 2) Apply the security globally to all operations
  schemas:
    Follower:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        usernamne:
          type: "string"
          description: "Username"
        abstract:
          type: "string"
        picture:
          type: "string"
        _links:
          type: "string"
          description: "Go to Follower Details"
    Story:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        usernamne:
          type: "string"
          description: "Username"
        abstract:
          type: "string"
        picture:
          type: "string"
        _links:
          type: "string"
          description: "Go to Stor Details"
    StoryDetails:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        abstract: 
          type: "string"
        location:
          type: "string"
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    Media:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        type: 
          type: "string"
          enum:
          - VIDEO
          - IMAGE
        path: 
          type: "string"

          